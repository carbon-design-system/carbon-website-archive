{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Widget\",\n  \"tabs\": [\"Usage\", \"Style\", \"Code\", \"Approval\"],\n  \"internal\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Widget approval\"), mdx(\"p\", null, \"Dashboard widgets have a \", mdx(\"b\", null, \"two-step review process\"), \":\"), mdx(\"h3\", null, \"1. Proposing a service widget\"), mdx(\"p\", null, \"To propose a new service widget, go to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.ibm.com/Bluemix/core-dev/issues\"\n  }), \"Bluemix/core-dev repo\"), \" and create a new issue using the widget proposal template. \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"To propose changes to an existing widget, or an idea for a new core widget, just submit a normal issue.\")), mdx(\"h3\", null, \"2. Final widget review\"), mdx(\"p\", null, \"Once development and testing are complete, submit the widget for final review by going to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.ibm.com/Bluemix/core-dev/issues\"\n  }), \"Bluemix/core-dev repo\"), \" and creating a new issue using the widget review template. \"), mdx(\"p\", null, \"The dashboard team reserves the right to remove widgets with low usage analytics or negative user feedback.\"), mdx(\"p\", null, \"See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://cloud.ibm.com/docs/service-framework?topic=service-framework-user-experience-ux-#ux015-dashboard-widgets\"\n  }), \"Service Framework\"), \" for more details. \"), mdx(\"h2\", null, \"Final review checklist\"), mdx(\"h3\", null, \"Design\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Widget is intuitive and easy to use\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"User value of widget is documented by concept validation and user testing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Widget meets style guidelines for all widget states\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Illustrations match dashboard illustration style\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Type size and color matches dashboard styles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Icons do not clash with visual style of dashboard\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Widget tile description meets max character requirements\")), mdx(\"h3\", null, \"DevOps\\xA0\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Widget meets relevant plugin requirements \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automated unit testing with >70% code coverage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Analytics are instrumented for at least click through and loading actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Widget uses content caching in local storage* \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Error, permission and loading states are supported*\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"File endpoint is supported for infinite caching with cache busting of js and css bundles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Shared libraries supported (minimize bundle size)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dependencies already deployed to production\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Github repo and contacts for issues provided\")), mdx(\"p\", null, \"*Use utilities provided in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://test.cloud.ibm.com/docs/developing/get-coding/console-sdk?topic=onboarding-console-slash-example#console-slash-example\"\n  }), \"developer guidelines\")), mdx(\"h2\", null, \"Additional Guidance\"), mdx(\"h3\", null, \"Do\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Submit a new widget proposal before starting development\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Focus on user value - if a widget isn\\u2019t useful, users won\\u2019t add it to their dashboard\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Follow guidelines on the style tab of this page\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read the final review checklist before submitting a widget\")), mdx(\"h3\", null, \"Don\\u2019t\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don\\u2019t skip user research when building a widget - even if it\\u2019s with internal users\")), mdx(\"h2\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://ibm.box.com/s/svdoa95p2p2l37x9jr25islcrv6t1or1\"\n  }), \"Widget Sticker Sheet\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://ibm.box.com/s/f2efq7ylbuwlfwnpwdqzk45c6mkz17bc\"\n  }), \"Sample Dashboard Illustrations\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://cloud.ibm.com/docs/service-framework?topic=service-framework-user-experience-ux-#ux015-dashboard-widgets\"\n  }), \"Service Framework\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://test.cloud.ibm.com/docs/developing/get-coding/console-sdk?topic=onboarding-step1-build#step1-build\"\n  }), \"Developer Guidelines\"))), mdx(\"p\", null, \"Questions? contact @Tessa (design) or @Arn (dev) or post to #pup-slashboard\"));\n}\nMDXContent.isMDXComponent = true;"},"fields":{"slug":"/your-product-on-ibm-cloud/widget-guidelines/approval","currentPage":"approval"},"frontmatter":{"title":"Widget","label":null,"tabs":["Usage","Style","Code","Approval"],"internal":true}}},"pageContext":{"slug":"/your-product-on-ibm-cloud/widget-guidelines/approval","currentPage":"approval"}}
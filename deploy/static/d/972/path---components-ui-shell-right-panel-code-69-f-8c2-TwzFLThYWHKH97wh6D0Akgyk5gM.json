{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"UI shell right panel\",\n  \"tabs\": [\"Code\", \"Usage\", \"Style\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Row = makeShortcode(\"Row\");\nvar Column = makeShortcode(\"Column\");\nvar ComponentDocs = makeShortcode(\"ComponentDocs\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Right panel\"), mdx(Row, {\n    mdxType: \"Row\"\n  }, mdx(Column, {\n    offsetLg: \"4\",\n    mdxType: \"Column\"\n  }, mdx(\"iframe\", {\n    src: \"https://codesandbox.io/embed/right-panel-clc2m?fontsize=1&hidenavigation=1&view=preview\",\n    title: \"right-panel\",\n    allow: \"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"500px\",\n      \"borderWidth\": \"0px\",\n      \"borderRadius\": \"4px\",\n      \"overflow\": \"hidden\"\n    },\n    sandbox: \"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n  }))), mdx(\"h2\", null, \"Right panel with switcher\"), mdx(Row, {\n    mdxType: \"Row\"\n  }, mdx(Column, {\n    offsetLg: \"4\",\n    mdxType: \"Column\"\n  }, mdx(\"iframe\", {\n    src: \"https://codesandbox.io/embed/right-panel-with-switcher-3zpq1?fontsize=14&hidenavigation=1&view=preview\",\n    title: \"right-panel-with-switcher\",\n    allow: \"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"500px\",\n      \"borderWidth\": \"0px\",\n      \"borderRadius\": \"4px\",\n      \"overflow\": \"hidden\"\n    },\n    sandbox: \"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n  }))), mdx(ComponentDocs, {\n    component: \"ui-shell\",\n    mdxType: \"ComponentDocs\"\n  }));\n}\nMDXContent.isMDXComponent = true;"},"fields":{"slug":"/components/UI-shell-right-panel/code","currentPage":"code"},"frontmatter":{"title":"UI shell right panel","label":null,"tabs":["Code","Usage","Style"],"internal":null}}},"pageContext":{"slug":"/components/UI-shell-right-panel/code","currentPage":"code"}}
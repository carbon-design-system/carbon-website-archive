{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Widget\",\n  \"tabs\": [\"Usage\", \"Style\", \"Code\", \"Approval\"],\n  \"internal\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ImageComponent = makeShortcode(\"ImageComponent\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"General guidelines\"), mdx(\"p\", null, \"A \", mdx(\"b\", null, \"dashboard widget\"), \" provides a summary of a platform functionality, status, or individual service. The goal of a widget is to provide actionable information that helps the user quickly accomplish a key task or track key metrics.\\xA0\"), mdx(\"br\", null), mdx(ImageComponent, {\n    fixed: \"default\",\n    mdxType: \"ImageComponent\"\n  }, mdx(\"span\", {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"maxWidth\": \"1120px\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\"\n    }\n  }, \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"60.83333333333334%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"img\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0px\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0px\",\n      \"left\": \"0px\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n    },\n    \"alt\": \"Dashboard\",\n    \"title\": \"\",\n    \"src\": \"/static/941fa56fbad11d902829ea68cfa1780b/24bd0/sample_dashboard.png\",\n    \"srcSet\": [\"/static/941fa56fbad11d902829ea68cfa1780b/7cb4c/sample_dashboard.png 280w\", \"/static/941fa56fbad11d902829ea68cfa1780b/7ff44/sample_dashboard.png 560w\", \"/static/941fa56fbad11d902829ea68cfa1780b/24bd0/sample_dashboard.png 1120w\", \"/static/941fa56fbad11d902829ea68cfa1780b/3ffe4/sample_dashboard.png 1440w\"],\n    \"sizes\": \"(max-width: 1120px) 100vw, 1120px\"\n  })), \"\\n  \")), mdx(\"h2\", null, \"Variations\"), mdx(\"h3\", null, \"Widget size\"), mdx(\"p\", null, \"Dashboard widgets have \", mdx(\"b\", null, \"two possible sizes\"), \", small and large. The height for both sizes is fixed (310px) and neither widget is currently resizable. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Small (1:1) - Recommended \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Large (2:1) - Requires an additional 1:1 design for smaller viewports\")), mdx(\"br\", null), mdx(ImageComponent, {\n    fixed: \"default\",\n    mdxType: \"ImageComponent\"\n  }, mdx(\"span\", {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"maxWidth\": \"1120px\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\"\n    }\n  }, \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"60.83333333333334%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"img\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0px\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0px\",\n      \"left\": \"0px\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n    },\n    \"alt\": \"Widget Dimensions\",\n    \"title\": \"\",\n    \"src\": \"/static/834954a477019c11937142f8d44dbc0f/24bd0/widget_dimensions.png\",\n    \"srcSet\": [\"/static/834954a477019c11937142f8d44dbc0f/7cb4c/widget_dimensions.png 280w\", \"/static/834954a477019c11937142f8d44dbc0f/7ff44/widget_dimensions.png 560w\", \"/static/834954a477019c11937142f8d44dbc0f/24bd0/widget_dimensions.png 1120w\", \"/static/834954a477019c11937142f8d44dbc0f/3ffe4/widget_dimensions.png 1440w\"],\n    \"sizes\": \"(max-width: 1120px) 100vw, 1120px\"\n  })), \"\\n  \")), mdx(\"h3\", null, \"Widget type\"), mdx(\"p\", null, \"There are two types of dashboard widgets, \", mdx(\"b\", null, \"core widgets\"), \" and \", mdx(\"b\", null, \"service widgets\"), \". \"), mdx(\"h4\", null, \"Core widget\"), mdx(\"p\", null, \"Core widgets are designed by the dashboard team, and are displayed on the dashboard by default. They usually display platform functionality, such as maintenance events or support cases. \"), mdx(\"h4\", null, \"Service widget\"), mdx(\"p\", null, \"Service widgets are designed by service teams, and must be actively added to the dashboard using the customize dashboard feature. Services wishing to propose a widget should follow the widget review process (see Widget approval). \"), mdx(\"h2\", null, \"Contributors\"), mdx(\"h4\", null, \"Governance team\"), mdx(\"p\", null, \"Adriana Morales, Kayla Lewis, Tessa Rodes, Kaley Coffield @cloud-ux-governance\"), mdx(\"h4\", null, \"Dashboard team\"), mdx(\"p\", null, \"Arn Hyndman, Nancy Ching, Kala Nenkova, Holman Sze, Jeff Ng, Virginia Nicholson, Denise Heebner\"), mdx(\"h4\", null, \"Content team\"), mdx(\"p\", null, \"Courtney Bittner\"));\n}\nMDXContent.isMDXComponent = true;"},"fields":{"slug":"/your-product-on-ibm-cloud/widget-guidelines/usage","currentPage":"usage"},"frontmatter":{"title":"Widget","label":null,"tabs":["Usage","Style","Code","Approval"],"internal":true}}},"pageContext":{"slug":"/your-product-on-ibm-cloud/widget-guidelines/usage","currentPage":"/your-product-on-ibm-cloud/widget-guidelines/usage"}}
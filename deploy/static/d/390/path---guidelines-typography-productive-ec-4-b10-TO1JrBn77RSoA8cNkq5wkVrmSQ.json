{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"label\": \"When used properly, typography can help create clear hierarchies, organize information, and guide users through the product or experience.\",\n  \"title\": \"Typography\",\n  \"tabs\": [\"Overview\", \"Productive\", \"Expressive\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"IBM Productive type set\"), mdx(\"p\", null, \"Productive type is reserved for use in web-based product design, where the user needs to focus on tasks. The Productive styles are curated to create a series of clear user expectations about hierarchy.\"), mdx(\"p\", null, \"The Productive styles below introduce the new IBM Design Language tokens. The difference between the Productive and Expressive styles is mainly evident in the Headings. Aside from the token names, which are specifically calibrated for product vs. editorial designers (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$label-01\"), \" vs. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$caption-01\"), \") \\u2014 the Supporting and Body styles have the same values in both the Productive and Expressive sets.\"), mdx(\"p\", null, \"Even though IBM Plex contains a wide range of scales, it\\u2019s important to use curated sets below for their specified purpose. For consistent, reliable performance across various screen sizes, do not use fluid type in components or in product UI.\"), mdx(TypesetStyle, {\n    breakpointControls: false,\n    typesets: \"supportingStyles,body,fixedHeadings\",\n    mdxType: \"TypesetStyle\"\n  }));\n}\nMDXContent.isMDXComponent = true;"},"fields":{"slug":"/guidelines/typography/productive","currentPage":"productive"},"frontmatter":{"title":"Typography","label":"When used properly, typography can help create clear hierarchies, organize information, and guide users through the product or experience.","tabs":["Overview","Productive","Expressive"],"internal":null}}},"pageContext":{"slug":"/guidelines/typography/productive","currentPage":"productive"}}
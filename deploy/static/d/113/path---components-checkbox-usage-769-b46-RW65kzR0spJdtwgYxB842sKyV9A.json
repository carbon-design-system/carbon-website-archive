{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Checkbox\",\n  \"tabs\": [\"Code\", \"Usage\", \"Style\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar AnchorLinks = makeShortcode(\"AnchorLinks\");\nvar ImageComponent = makeShortcode(\"ImageComponent\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(AnchorLinks, {\n    mdxType: \"AnchorLinks\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#general-guidance\"\n  }), \"General guidance\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#related-components\"\n  }), \"Related components\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#content\"\n  }), \"Content\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#tables\"\n  }), \"Tables\")))), mdx(\"h2\", null, \"General guidance\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Checkboxes\"), \" are used for a list of options where the user may select multiple options, including all or none.\"), mdx(\"h4\", null, \"Checkbox states\"), mdx(\"p\", null, \"The checkbox control allows for three states: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"selected\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"unselected\"), \", and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"indeterminate\"), \". The indeterminate state comes into play when the checkbox contains a sublist of selections, some of which are selected, and some unselected.\"), mdx(\"h4\", null, \"Click target\"), mdx(\"p\", null, \"Users should be able to select the checkbox by clicking on the box directly or by clicking on its label.\"), mdx(\"h4\", null, \"Default selection\"), mdx(\"p\", null, \"The default view of a set of checkboxes is having no option selected.\"), mdx(ImageComponent, {\n    cols: \"8\",\n    caption: \"By default, checkboxes are unchecked.\",\n    mdxType: \"ImageComponent\"\n  }, mdx(\"span\", {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"maxWidth\": \"1120px\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\"\n    }\n  }, \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"41.30434782608695%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"img\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0px\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0px\",\n      \"left\": \"0px\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n    },\n    \"alt\": \"The default state for checkboxes is unchecked.\",\n    \"title\": \"\",\n    \"src\": \"/static/06579fa37df5ce59fdebc002dc3f0932/24bd0/checkbox-usage-1.png\",\n    \"srcSet\": [\"/static/06579fa37df5ce59fdebc002dc3f0932/7cb4c/checkbox-usage-1.png 280w\", \"/static/06579fa37df5ce59fdebc002dc3f0932/7ff44/checkbox-usage-1.png 560w\", \"/static/06579fa37df5ce59fdebc002dc3f0932/24bd0/checkbox-usage-1.png 1120w\", \"/static/06579fa37df5ce59fdebc002dc3f0932/b4af2/checkbox-usage-1.png 1472w\"],\n    \"sizes\": \"(max-width: 1120px) 100vw, 1120px\"\n  })), \"\\n  \")), mdx(\"h2\", null, \"Related components\"), mdx(\"h4\", null, \"Checkbox vs. radio button\"), mdx(\"p\", null, \"Whereas radio buttons represent a group of \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"mutually exclusive\"), \" choices, users can select one or more checkboxes from a group. In use cases where only one selection of a group is allowed, use the radio button component instead of the checkbox.\"), mdx(\"h4\", null, \"Checkbox vs. toggle switch\"), mdx(\"p\", null, \"Generally, toggle switches are preferred when the resulting action will be instantaneously applied, without the need for further confirmation. Checkboxes generally represent one input in a larger flow which requires a final confirmation step.\"), mdx(\"h4\", null, \"References\"), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/components/toggle\"\n  }), \"Toggle\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/components/radio-button\"\n  }), \"Radio button\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/components/form\"\n  }), \"Form\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Data table (coming soon)\"))), mdx(\"h2\", null, \"Content\"), mdx(\"h4\", null, \"Headings\"), mdx(\"p\", null, \"If necessary, a heading can accompany a set of checkboxes to provide further context or clarity. Use sentence case for checkbox headings. In the example below, \\u201CIBM designers\\u201D would be the heading for the set of checkboxes.\"), mdx(\"h4\", null, \"Labels\"), mdx(\"p\", null, \"Always use clear and concise labels for checkboxes. Be explicit about the results that will follow if the checkbox is selected. Labels appear to the right of checkboxes.\"), mdx(\"h2\", null, \"Tables\"), mdx(\"p\", null, \"See the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/components/data-table/usage\"\n  }), \"data table\"), \" section for guidance on how to use checkboxes within a table.\"));\n}\nMDXContent.isMDXComponent = true;"},"fields":{"slug":"/components/checkbox/usage","currentPage":"usage"},"frontmatter":{"title":"Checkbox","label":null,"tabs":["Code","Usage","Style"],"internal":null}}},"pageContext":{"slug":"/components/checkbox/usage","currentPage":"usage"}}
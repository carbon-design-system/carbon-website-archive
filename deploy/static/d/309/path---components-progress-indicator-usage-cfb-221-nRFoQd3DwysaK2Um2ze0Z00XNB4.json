{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Progress indicator\",\n  \"tabs\": [\"Code\", \"Usage\", \"Style\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ImageComponent = makeShortcode(\"ImageComponent\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"General guidance\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Progress indicator\"), \" is a visual representation of a users progress through a set of steps. They guide the user through a number of steps in order to complete a specified process.\"), mdx(\"p\", null, \"Use progress indicators to keep the user on track when completing a specific task. By dividing the end goal into smaller, sub-tasks, it increases the percentage of completeness as each task is completed.\"), mdx(\"h2\", null, \"Best practices\"), mdx(\"h4\", null, \"Logical progression\"), mdx(\"p\", null, \"Display the steps in order from left to right. Indicate to the user that they are performing a multi-step process, and show the direction of movement. Allow the user to return to a previous step to review their data submission.\"), mdx(\"h4\", null, \"Indicate the current step\"), mdx(\"p\", null, \"Keeping the user informed of where they currently are within the process or task at hand will give them a sense of control. This helps the user to know where they are in relation to where they have been, and what sections are to follow. Clear labels should accompany the progress indicator to indicate what the user will accomplish within each step. Keep labels between one to two words.\"), mdx(\"h4\", null, \"Validation\"), mdx(\"p\", null, \"Use validation to confirm that a previous step has been completed. If the user cannot proceed onto another step without first completing a task, use an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/experimental/notification\"\n  }), \"Inline Notification\"), \" to inform them.\"), mdx(ImageComponent, {\n    cols: \"8\",\n    caption: \"In-context progress indicator\",\n    mdxType: \"ImageComponent\"\n  }, mdx(\"span\", {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"maxWidth\": \"1120px\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\"\n    }\n  }, \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"103.80434782608697%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"img\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0px\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0px\",\n      \"left\": \"0px\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n    },\n    \"alt\": \"Example of the progress indicator in a payment UI\",\n    \"title\": \"\",\n    \"src\": \"/static/86b00b8dfe252fcfed752116347a8b59/24bd0/progress-indicator-usage-1.png\",\n    \"srcSet\": [\"/static/86b00b8dfe252fcfed752116347a8b59/7cb4c/progress-indicator-usage-1.png 280w\", \"/static/86b00b8dfe252fcfed752116347a8b59/7ff44/progress-indicator-usage-1.png 560w\", \"/static/86b00b8dfe252fcfed752116347a8b59/24bd0/progress-indicator-usage-1.png 1120w\", \"/static/86b00b8dfe252fcfed752116347a8b59/b4af2/progress-indicator-usage-1.png 1472w\"],\n    \"sizes\": \"(max-width: 1120px) 100vw, 1120px\"\n  })), \"\\n  \")));\n}\nMDXContent.isMDXComponent = true;"},"fields":{"slug":"/components/progress-indicator/usage","currentPage":"usage"},"frontmatter":{"title":"Progress indicator","label":null,"tabs":["Code","Usage","Style"],"internal":null}}},"pageContext":{"slug":"/components/progress-indicator/usage","currentPage":"usage"}}
{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Developers\",\n  \"tabs\": [\"Vanilla\", \"React\", \"Angular\", \"Vue\", \"Other frameworks\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar AnchorLinks = makeShortcode(\"AnchorLinks\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(AnchorLinks, {\n    mdxType: \"AnchorLinks\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#development-options\"\n  }), \"Development options\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#other-frameworks\"\n  }), \"Other frameworks?\")))), mdx(\"h2\", null, \"Development options\"), mdx(\"p\", null, \"The Carbon Design System supports vanilla JS, React and Angular as core parts of the product. But you can still build components even if you\\u2019re using a different framework.\"), mdx(AnchorLinks, {\n    small: true,\n    mdxType: \"AnchorLinks\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#using-just-the-styles\"\n  }), \"Using just the styles\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#wrapping-components-with-javascript-frameworks\"\n  }), \"Wrapping a component with a JavaScript framework of your choice\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#examples\"\n  }), \"Examples\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#troubleshooting\"\n  }), \"Troubleshooting\")))), mdx(\"h3\", null, \"Using just the styles\"), mdx(\"p\", null, \"Developers wanting to build in different ways follow the instructions for the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/getting-started/developers/vanilla\"\n  }), \"Vanilla\"), \" library to access the styles and build out their own components.\"), mdx(\"h3\", null, \"Wrapping components with JavaScript frameworks\"), mdx(\"p\", null, \"Many JavaScript frameworks have a mechanism to dynamically create/destroy DOM elements, for example, upon change in array.\\nThis often makes it unclear when the DOM element to instantiate a Carbon component is available, which often depends on the JavaScript framework you use.\"), mdx(\"p\", null, \"Also when DOM elements that Carbon components have been instantiated on are being destroyed, the Carbon component instances should be released so that e.g. there are no zombie event handlers.\"), mdx(\"p\", null, \"The easiest way to hook on the creation/destruction of DOM elements is by defining a \\u201Cwrapping component\\u201D, with the JavaScript framework of your choice. Here\\u2019s an example using Web Components\\u2019 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Web_Components/Custom_Elements\"\n  }), \"Custom Elements v1 spec\"), \", but the notion of components, along with the lifecycle callbacks, are commonly found in many other JavaScript frameworks.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"class BXLoading extends HTMLElement {\\n  // Called when this custom element gets into render tree\\n  connectedCallback() {\\n    // \\\"this\\\" here is \\\"<bx-loading>\\\" element\\n    this.innerHTML =\\n      '(e.g. snippet from http://carbondesignsystem.com/components/loading/code)';\\n    this.loading = CarbonComponents.Loading.create(\\n      this.querySelector('[data-loading]')\\n    );\\n  }\\n  // Called when this custom element gets out of render tree\\n  disconnectedCallback() {\\n    this.loading.release();\\n  }\\n}\\ncustomElements.define('bx-loading', BXLoading);\\n\")), mdx(\"h3\", null, \"Examples\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://codepen.io/asudoh/pen/VryJBO?editors=1010\"\n  }), \"Angular 4 wrapper for Carbon\"), \" (We use this just as an example. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ibm/carbon-components-angular\"\n  }), \"Angular\"), \" is now supported by the Carbon Design System.)\"), mdx(\"h3\", null, \"Troubleshooting\"), mdx(\"p\", null, \"If you experience any issues while getting set up with Carbon Components, please head over to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ibm/carbon-components\"\n  }), \"Carbon Components GitHub repo\"), \" for more guidelines and support. Please \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/ibm/carbon-components/issues\"\n  }), \"create an issue\"), \" if your issue does not already exist.\"), mdx(\"h2\", null, \"Other frameworks?\"), mdx(\"p\", null, \"We are open to the idea of providing core support for additional frameworks in future. We added Angular support in the summer of 2018 and Vue in early 2019.\"), mdx(\"p\", null, \"For the Carbon Design System to incorporate additional frameworks into our core offering, those frameworks need clear, guaranteed, ongoing resources to maintain and support that option. If a team built a product using a native web components implemenation of Carbon, for example, but had no plan to support that solution outside of their product, that couldn\\u2019t become a core part of the Carbon Design System.\"));\n}\nMDXContent.isMDXComponent = true;"},"fields":{"slug":"/getting-started/developers/other-frameworks","currentPage":"other-frameworks"},"frontmatter":{"title":"Developers","label":null,"tabs":["Vanilla","React","Angular","Vue","Other frameworks"],"internal":null}}},"pageContext":{"slug":"/getting-started/developers/other-frameworks","currentPage":"other-frameworks"}}
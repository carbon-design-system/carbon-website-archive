{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Code snippet\",\n  \"tabs\": [\"Code\", \"Usage\", \"Style\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ImageComponent = makeShortcode(\"ImageComponent\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"General guidance\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Code snippets\"), \" are small blocks of reusable code that can be inserted in a code file.\"), mdx(\"p\", null, \"Our code snippets are built with basic styling. We recommend using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/chriskempson/base16\"\n  }), \"Base16\"), \" for more complex syntax highlighting. Base16 provides carefully chosen syntax highlighting and a default set of sixteen colors suitable for a wide range of applications. The theme we recommend using is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Solarflare\"), \".\"), mdx(\"h4\", null, \"Overflow\"), mdx(\"p\", null, \"If there are more than nine lines of code, apply vertical scrolling to the code snippet.\"), mdx(\"p\", null, \"Terminal commands are often longer strings and should only appear on one line. Apply horizontal scrolling to maintain the set width of the box for those longer strings.\"), mdx(\"h2\", null, \"Interaction\"), mdx(\"p\", null, \"Code snippets are accompanied by a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"copy icon\"), \", which allows users to copy the provided code to their clipboard. The copy icon must be accompanied by a confirmation that states the successful action of copying an item to the users clipboard.\"), mdx(ImageComponent, {\n    cols: \"8\",\n    mdxType: \"ImageComponent\"\n  }, mdx(\"span\", {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"maxWidth\": \"1120px\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\"\n    }\n  }, \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"47.55434782608695%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n    \", mdx(\"img\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"style\": {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"margin\": \"0px\",\n      \"verticalAlign\": \"middle\",\n      \"position\": \"absolute\",\n      \"top\": \"0px\",\n      \"left\": \"0px\",\n      \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n    },\n    \"alt\": \"code snippet example\",\n    \"title\": \"\",\n    \"src\": \"/static/c86dee9478849fcc5062dd853652e4ae/24bd0/code-snippet-usage-1.png\",\n    \"srcSet\": [\"/static/c86dee9478849fcc5062dd853652e4ae/7cb4c/code-snippet-usage-1.png 280w\", \"/static/c86dee9478849fcc5062dd853652e4ae/7ff44/code-snippet-usage-1.png 560w\", \"/static/c86dee9478849fcc5062dd853652e4ae/24bd0/code-snippet-usage-1.png 1120w\", \"/static/c86dee9478849fcc5062dd853652e4ae/b4af2/code-snippet-usage-1.png 1472w\"],\n    \"sizes\": \"(max-width: 1120px) 100vw, 1120px\"\n  })), \"\\n  \")));\n}\nMDXContent.isMDXComponent = true;"},"fields":{"slug":"/components/code-snippet/usage","currentPage":"usage"},"frontmatter":{"title":"Code snippet","label":null,"tabs":["Code","Usage","Style"],"internal":null}}},"pageContext":{"slug":"/components/code-snippet/usage","currentPage":"/components/code"}}
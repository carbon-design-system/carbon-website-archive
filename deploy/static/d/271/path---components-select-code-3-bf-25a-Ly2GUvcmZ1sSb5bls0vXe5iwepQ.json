{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Select\",\n  \"tabs\": [\"Code\", \"Usage\", \"Style\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ComponentCode = makeShortcode(\"ComponentCode\");\nvar ComponentDocs = makeShortcode(\"ComponentDocs\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var _mdx;\n\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ComponentCode, (_mdx = {\n    name: \"Select\",\n    component: \"select\",\n    variation: \"select\",\n    hasReactVersion: true,\n    hasLightVersion: true\n  }, _defineProperty(_mdx, \"hasReactVersion\", true), _defineProperty(_mdx, \"hasVueVersion\", \"select--default\"), _defineProperty(_mdx, \"hasAngularVersion\", \"?path=/story/select--basic\"), _defineProperty(_mdx, \"codepen\", \"oOxzmZ\"), _defineProperty(_mdx, \"mdxType\", \"ComponentCode\"), _mdx)), mdx(ComponentCode, {\n    name: \"Select with helper text\",\n    component: \"select\",\n    variation: \"select--helpertext\",\n    hasReactVersion: true,\n    hasVueVersion: \"select--default&knob-helper%20text=helpful%20text\",\n    codepen: \"wZGzZY\",\n    mdxType: \"ComponentCode\"\n  }), mdx(ComponentCode, {\n    name: \"Select invalid\",\n    component: \"select\",\n    variation: \"select--invalid\",\n    hasReactVersion: true,\n    hasVueVersion: \"select--default&knob-invalid%20message=Invalid selection\",\n    codepen: \"MRyjMg\",\n    mdxType: \"ComponentCode\"\n  }), mdx(ComponentCode, {\n    name: \"Inline select\",\n    component: \"select\",\n    variation: \"select--inline\",\n    hasReactVersion: true,\n    hasVueVersion: \"select--default&knob-inline=true\",\n    hasAngularVersion: \"?path=/story/select--basic&knob-Theme=dark&knob-Display=inline\",\n    codepen: \"qwZaer\",\n    mdxType: \"ComponentCode\"\n  }), mdx(ComponentCode, {\n    name: \"Inline select with helper text\",\n    component: \"select\",\n    variation: \"select--helpertextinline\",\n    hasReactVersion: true,\n    hasVueVersion: \"select--default&knob-inline=true&knob-helper%20text=helpful%20text\",\n    codepen: \"VNammQ\",\n    mdxType: \"ComponentCode\"\n  }), mdx(ComponentCode, {\n    name: \"Inline select invalid\",\n    component: \"select\",\n    variation: \"select--inlineinvalid\",\n    hasReactVersion: true,\n    hasVueVersion: \"select--default&knob-inline=true&knob-invalid%20message=Invalid selection\",\n    codepen: \"ZZWBLQ\",\n    mdxType: \"ComponentCode\"\n  }), mdx(ComponentDocs, {\n    component: \"select\",\n    mdxType: \"ComponentDocs\"\n  }));\n}\nMDXContent.isMDXComponent = true;"},"fields":{"slug":"/components/select/code","currentPage":"code"},"frontmatter":{"title":"Select","label":null,"tabs":["Code","Usage","Style"],"internal":null}}},"pageContext":{"slug":"/components/select/code","currentPage":"code"}}
{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dropdown\",\n  \"tabs\": [\"Code\", \"Usage\", \"Style\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ComponentCode = makeShortcode(\"ComponentCode\");\nvar ComponentReact = makeShortcode(\"ComponentReact\");\nvar ComponentDocs = makeShortcode(\"ComponentDocs\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var _mdx;\n\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ComponentCode, {\n    name: \"Dropdown\",\n    component: \"dropdown\",\n    variation: \"dropdown\",\n    hasReactVersion: true,\n    hasLightVersion: true,\n    hasVueVersion: \"dropdown--default\",\n    hasAngularVersion: \"?path=/story/dropdown--basic\",\n    codepen: \"zXrqqw\",\n    mdxType: \"ComponentCode\"\n  }), mdx(ComponentCode, (_mdx = {\n    name: \"Dropdown (Up)\",\n    component: \"dropdown\",\n    variation: \"dropdown--up\",\n    codepen: \"eeGYvQ\",\n    hasReactVersion: true,\n    hasLightVersion: true,\n    hasVueVersion: \"dropdown--default&knob-up=true\",\n    hasAngularVersion: \"?path=/story/dropdown--basic\"\n  }, _defineProperty(_mdx, \"codepen\", \"ZZQWpB\"), _defineProperty(_mdx, \"mdxType\", \"ComponentCode\"), _mdx)), mdx(ComponentCode, {\n    name: \"Dropdown inline\",\n    component: \"dropdown\",\n    variation: \"dropdown--inline\",\n    hasReactVersion: true,\n    hasVueVersion: \"dropdown--default&knob-inline=true\",\n    hasAngularVersion: \"?path=/story/dropdown--basic\",\n    codepen: \"OGMNRY\",\n    mdxType: \"ComponentCode\"\n  }), mdx(ComponentReact, {\n    name: \"Multi select\",\n    component: \"MultiSelect\",\n    variation: \"MultiSelect\",\n    hasAngularVersion: true,\n    mdxType: \"ComponentReact\"\n  }), mdx(ComponentReact, {\n    name: \"Filterable multi select\",\n    component: \"MultiSelect\",\n    variation: \"MultiSelect.Filterable\",\n    hasAngularVersion: true,\n    mdxType: \"ComponentReact\"\n  }), mdx(ComponentReact, {\n    name: \"Inline multi select\",\n    component: \"MultiSelect\",\n    variation: \"MultiSelect.Inline\",\n    hasAngularVersion: true,\n    mdxType: \"ComponentReact\"\n  }), mdx(ComponentReact, {\n    name: \"Combo box\",\n    component: \"ComboBox\",\n    hasAngularVersion: true,\n    mdxType: \"ComponentReact\"\n  }), mdx(ComponentDocs, {\n    component: \"dropdown\",\n    mdxType: \"ComponentDocs\"\n  }));\n}\nMDXContent.isMDXComponent = true;"},"fields":{"slug":"/components/dropdown/code","currentPage":"code"},"frontmatter":{"title":"Dropdown","label":null,"tabs":["Code","Usage","Style"],"internal":null}}},"pageContext":{"slug":"/components/dropdown/code","currentPage":"code"}}